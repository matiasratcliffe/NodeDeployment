version: '3.8'

services:
  genesis:
    image: alpine:latest
    restart: on-failure
    entrypoint: ["sh", "-c"]
    command:
      - "if [ ! -f genesis.ssz ]; then wget 'https://github.com/eth-clients/eth2-networks/raw/master/shared/prater/genesis.ssz'; fi"
    working_dir: /genesis
    volumes:
      - ./volumes/ethereum-data/prysm:/genesis
  prysm:
    image: gcr.io/prysmaticlabs/prysm/beacon-chain:v4.1.1
    restart: unless-stopped
    stop_grace_period: 2m
    volumes:
      - ./volumes/ethereum-data/prysm:/data
      - ./volumes/ethereum-data/geth:/geth
    ports:
      - "4000:4000"  # Replace with the ports needed by Prysm
      - "13000:13000"  # Replace with the ports needed by Prysm
    depends_on:
      #geth:
      #  condition: service_healthy
      genesis:
        condition: service_completed_successfully
    command:
      - --accept-terms-of-use
      - --goerli
      - --datadir=/data
      - --execution-endpoint=/geth/geth.ipc
      - --genesis-state=/data/genesis.ssz
      - --checkpoint-sync-url=https://goerli.beaconstate.info
      - --genesis-beacon-api-url=https://goerli.beaconstate.info
  geth:
    image: ethereum/client-go:latest
    #restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "geth attach --datadir /data --exec eth.blockNumber"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - --syncmode=snap
      - --datadir=/data
      - --goerli
      - --authrpc.addr=prysm
      - --authrpc.port=8551
      - --authrpc.vhosts=*
      - --http
      - --http.api=eth,net,web3
      - --http.addr=0.0.0.0
    volumes:
      - ./volumes/ethereum-data/geth:/data
    ports:
      - 30303:30303
      - 30303:30303/udp
      - 8545:8545
      - 8546:8546
    container_name: geth
  tcpdump:
    image: nicolaka/netshoot
    command: tcpdump -i eth0 -w /data/captures.pcap
    network_mode: service:prysm
    volumes:
      - ./volumes/netshoot-data:/data
  python-app:
    build: ./scanner
    restart: on-failure
    volumes:
      - ./volumes/scanner-data:/app/data
    environment:
      ETHERSCAN_API_KEY: ${ETHERSCAN_API_KEY}
      UNISWAPV2ROUTER_CONTRACT_ADDRESS: ${UNISWAPV2ROUTER_CONTRACT_ADDRESS}
      ADDRESS_TO_TRACK: ${ADDRESS_TO_TRACK}
    container_name: scanner
    depends_on:
      - geth
